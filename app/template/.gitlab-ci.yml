image: lorisleiva/laravel-docker:latest

stages:
  - build
  - inspect
  - dockerize

before_script:
  - cd src

# The job's name.
composer:
  # The job's stage (build, test or deploy).
  stage: build

  # What to run on the job.
  script:
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
    - cp .env.example .env
    - php artisan key:generate

  artifacts:
    # (Optional) Give it an expiration date, 
    # after that period you won't be able to 
    # download them via the UI anymore.
    expire_in: 1 month

    # Define what to output from the job.
    paths:
      - src/vendor/
      - src/.env
cache:
  # The variable CI_COMMIT_REF_SLUG
  # refers to the slug of the branch.
  # For example: `master` for the master branch.
  # We use the `composer` suffix to avoid conflicts with
  # the `npm` cache that we'll define next.
  key: ${CI_COMMIT_REF_SLUG}-composer

  # Define what to cache.
  paths:
    - src/vendor/

phpunit:
  stage: inspect
  variables:
    XDEBUG_MODE: "coverage"
  # List of jobs from which it will download the artifacts.
  dependencies:
    - composer

  script:
    - phpunit --coverage-text --colors=never

codestyle:
  stage: inspect
  dependencies: [ ]
  script:
    - phpcs --standard=PSR12 --extensions=php --ignore=app/Support/helpers.php app

dockerize-master:
  image: docker
  stage: dockerize

  variables:
    NGINX_TAG: $CI_REGISTRY_IMAGE/nginx
    PHP_TAG: $CI_REGISTRY_IMAGE/php

  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker pull "$PHP_TAG:latest" || true
    - docker pull "$NGINX_TAG:latest" || true

    - docker build --pull --cache-from  "$PHP_TAG:latest" -t "$PHP_TAG:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA" -t "$PHP_TAG" . -f app/dockerfiles/Dockerfile
    - docker build --pull --cache-from "$NGINX_TAG:latest" -t "$NGINX_TAG:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA" -t "$NGINX_TAG" . -f app/dockerfiles/Dockerfile

    - docker push "$PHP_TAG:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA"
    - docker push "$PHP_TAG:$CI_COMMIT_REF_SLUG"
    - docker push "$NGINX_TAG:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA"
    - docker push "$NGINX_TAG:$CI_COMMIT_REF_SLUG"
  only:
    - master


dockerize:
  image: docker
  stage: dockerize

  variables:
    NGINX_TAG: $CI_REGISTRY_IMAGE/nginx
    PHP_TAG: $CI_REGISTRY_IMAGE/php

  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker pull "$PHP_TAG:latest" || true
    - docker pull "$NGINX_TAG:latest" || true
    - docker build --pull --cache-from  "$PHP_TAG:latest" -t "$PHP_TAG:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA" -t "$PHP_TAG" . -f app/dockerfiles/Dockerfile
    - docker build --pull --cache-from "$NGINX_TAG:latest" -t "$NGINX_TAG:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA" -t "$NGINX_TAG" . -f app/dockerfiles/Dockerfile

    - docker push "$PHP_TAG:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA"
    - docker push "$PHP_TAG"
    - docker push "$NGINX_TAG:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA"
    - docker push "$NGINX_TAG"
  except:
    - master
