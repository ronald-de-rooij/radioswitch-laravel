version: "3.7"
services:
  php:
    container_name: app-php
    build:
      context: ./
      dockerfile: dockerfiles/Dockerfile
    env_file:
      - ../src/.env
    restart: unless-stopped
    working_dir: /var/www/
    depends_on:
      - postgres
    volumes:
      - ../src:/var/www
  nginx:
    container_name: app-nginx
    image: nginx:alpine
    restart: unless-stopped
    depends_on:
      - php
    environment:
      VIRTUAL_HOST: ${ADMIN_HOSTNAME},${API_HOSTNAME}
      LETSENCRYPT_HOST: ${ADMIN_HOSTNAME},${API_HOSTNAME}
    expose:
      - 80
    volumes:
      - ../src:/var/www
      - ./docker-configs/nginx:/etc/nginx/conf.d/
  postgres:
    container_name: app-postgres
    image: postgres:13-alpine
    user: ${POSTGRES_HOST_USER?Variable POSTGRES_HOST_USER not set}
    restart: unless-stopped
    volumes:
      - "../db-data:/var/lib/postgresql/data"
      - "/etc/passwd:/etc/passwd:ro"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
  node:
    container_name: app-npm
    image: node:14
    volumes:
      - ../src:/var/www
      - ../src/node_modules:/var/www/node_modules
    working_dir: /var/www
    command: sh -c 'npm install && npm run prod'
  cron:
    container_name: app-cron
    restart: unless-stopped
    build:
      context: .
      dockerfile: dockerfiles/cron.dockerfile
    depends_on:
      - postgres
    volumes:
      - ../src:/var/www
  queue:
    container_name: app-queue
    working_dir: /var/www
    restart: unless-stopped
    build:
      context: .
      dockerfile: dockerfiles/queue.dockerfile
    depends_on:
      - postgres
    volumes:
      - ../src:/var/www
    command: 'php artisan queue:work --queue=default'
networks:
  default:
    external:
      name: nginx-proxy